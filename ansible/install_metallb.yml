- name: Install MetalLB on K3s
  hosts: k3s_master
  become: true
  vars_files:
    - vars.yml


  tasks:
    - name: Set local kubeconfig path
      delegate_to: localhost
      set_fact:
        kubeconfig_path: "{{ lookup('env', 'HOME') }}/.kube/config"

    - name: Ensure local .kube directory exists
      delegate_to: localhost
      file:
        path: "{{ lookup('env', 'HOME') }}/.kube"
        state: directory
        mode: '0700'

    - name: Fetch kubeconfig from K3s master
      fetch:
        src: "/etc/rancher/k3s/k3s.yaml"
        dest: "{{ kubeconfig_path }}"
        flat: yes

    - name: Update kubeconfig with correct K3s master IP
      delegate_to: localhost
      shell: |
        sed -i 's/127.0.0.1/{{ k3s_master_ip }}/g' {{ kubeconfig_path }}

    - name: Set permissions for kubeconfig
      delegate_to: localhost
      file:
        path: "{{ kubeconfig_path }}"
        mode: '0600'

- name: Deploy MetalLB on K3s
  hosts: localhost
  vars_files:
    - vars.yml
  tasks:
    - name: Ensure kubeconfig path is set
      set_fact:
        kubeconfig_path: "{{ lookup('env', 'HOME') }}/.kube/config"

    - name: Create MetalLB namespace
      kubernetes.core.k8s:
        name: metallb-system
        api_version: v1
        kind: Namespace
        state: present
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Apply MetalLB manifests
      kubernetes.core.k8s:
        state: present
        src: "https://raw.githubusercontent.com/metallb/metallb/main/config/manifests/metallb-native.yaml"
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Wait for MetalLB pods to be ready
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: metallb-system
        kubeconfig: "{{ kubeconfig_path }}"
      register: metallb_pods
      until: metallb_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length > 0
      retries: 10
      delay: 10
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"
    
    - name: Wait for MetalLB webhook service to be available
      kubernetes.core.k8s_info:
        kind: Service
        namespace: metallb-system
        name: metallb-webhook-service
        kubeconfig: "{{ kubeconfig_path }}"
      register: webhook_service
      until: webhook_service.resources | length > 0
      retries: 20
      delay: 10

    - name: Wait for MetalLB webhook deployment to be ready
      kubernetes.core.k8s_info:
        kind: Deployment
        namespace: metallb-system
        name: controller
        kubeconfig: "{{ kubeconfig_path }}"
      register: metallb_controller
      until: metallb_controller.resources[0].status.availableReplicas is defined and metallb_controller.resources[0].status.availableReplicas > 0
      retries: 20
      delay: 10

    - name: Wait for MetalLB pods to be ready
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: metallb-system
        kubeconfig: "{{ kubeconfig_path }}"
      register: metallb_pods
      until: metallb_pods.resources | selectattr('status.phase', 'equalto', 'Running') | list | length > 0
      retries: 10
      delay: 10
      environment:
        KUBECONFIG: "{{ kubeconfig_path }}"

    - name: Create MetalLB ConfigMap for IP pool
      kubernetes.core.k8s:
        state: present
        namespace: metallb-system
        definition:
          apiVersion: metallb.io/v1beta1
          kind: IPAddressPool
          metadata:
            name: default-address-pool
          spec:
            addresses:
              - "{{ metallb_ip_range }}"
        kubeconfig: "{{ kubeconfig_path }}"

    - name: Create L2 Advertisement
      kubernetes.core.k8s:
        state: present
        namespace: metallb-system
        definition:
          apiVersion: metallb.io/v1beta1
          kind: L2Advertisement
          metadata:
            name: default-l2-advertisement
        kubeconfig: "{{ kubeconfig_path }}"
