---
- name: Setup Kubernetes Cluster Components
  hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - vars/app-secrets.yaml
    - vars/app-versions.yaml

  vars:
    metallb_state: present
    cert_manager_state: present
    external_secrets_state: present
    traefik_state: present
    argocd_state: present
    crd_state: present
    kubeconfig_path: "~/projects/talos-cluster/cluster-kubeconfig"
    k8s_env: dev # Change to 'prod' for production environment

  tasks:
    - name: Install MetalLB
      ansible.builtin.import_tasks: tasks/1.metallb-app.yaml
      vars:
        metallb_namespace: "{{ metallb.namespace }}"
        metallb_chart: "{{ metallb.chart }}"
        metallb_version: "{{ metallb.version }}"
        metallb_repo: "{{ metallb.repo }}"
        metallb_alias: "{{ metallb.repository_alias }}"
        metallb_addresses: "{{ ip_addresses }}"

    - name: Install Cert-Manager
      ansible.builtin.import_tasks: tasks/2.cert-manager-app.yaml
      vars:
        cert_manager_namespace: "{{ cert_manager.namespace }}"
        cert_manager_chart: "{{ cert_manager.chart }}"
        cert_manager_version: "{{ cert_manager.version }}"
        cert_manager_repo: "{{ cert_manager.repo }}"
        cert_manager_alias: "{{ cert_manager.repository_alias }}"
        domain_email: "{{ cert_manager_domain_email }}"
        domain_name: "{{ cert_manager_domain_name }}"
        domain_token: "{{ cloudflare_token }}"

    - name: Setup External Secrets
      ansible.builtin.import_tasks: tasks/3.external-secrets-app.yaml
      vars:
        eso_namespace: "{{ external_secrets.namespace }}"
        eso_chart: "{{ external_secrets.chart }}"
        eso_version: "{{ external_secrets.version }}"
        eso_repo: "{{ external_secrets.repo }}"
        eso_alias: "{{ external_secrets.repository_alias }}"
        eso_bitwarden_token: "{{ bitwarden_access_token }}"
        eso_bitwarden_org_id: "{{ bitwarden_organization_id }}"
        eso_bitwarden_project_id: "{{ bitwarden_project_id }}"

    - name: Install Traefik
      ansible.builtin.import_tasks: tasks/4.traefik_app.yaml
      vars:
        traefik_namespace: "{{ traefik.namespace }}"
        traefik_chart: "{{ traefik.chart }}"
        traefik_version: "{{ traefik.version }}"
        traefik_repo: "{{ traefik.repo }}"
        traefik_alias: "{{ traefik.repository_alias }}"
        traefik_domain: "traefik.{{ cert_manager_domain_name }}"

    - name: Install ArgoCD
      ansible.builtin.import_tasks: tasks/5.argocd-app.yaml
      vars:
        argocd_namespace: "{{ argocd.namespace }}"
        argocd_chart: "{{ argocd.chart }}"
        argocd_version: "{{ argocd.version }}"
        argocd_repo: "{{ argocd.repo }}"
        argocd_alias: "{{ argocd.repository_alias }}"
        argocd_domain: "argocd.{{ cert_manager_domain_name }}"
        argocd_admin_password: "{{ argocd_admin_password }}"

    - name: Install CRDs
      ansible.builtin.import_tasks: tasks/6.install-crds.yaml
      vars:
        crd_charts:
          - { alias: "{{ trivy.repository_alias }}", chart: "{{ trivy.chart }}", version: "{{ trivy.version }}", repo: "{{ trivy.repo }}", crd_path: crds}
          - { alias: "{{ grafana.repository_alias }}", chart: "{{ grafana.chart }}", version: "{{ grafana.version }}", repo: "{{ grafana.repo }}" , crd_path: charts/crds/crds}