
- name: Add MetalLB Helm repo
  ansible.builtin.command:
    cmd: helm repo add metallb https://metallb.github.io/metallb
  register: helm_repo_add
  changed_when: "'already exists' not in helm_repo_add.stdout"
  ignore_errors: true

- name: Update Helm repos
  ansible.builtin.command:
    cmd: helm repo update

- name: Ensure MetalLB namespace exists
  ansible.builtin.copy:
    dest: /tmp/metallb-namespace.yaml
    content: |
      apiVersion: v1
      kind: Namespace
      metadata:
        name: metallb-system
        labels:
          kubernetes.io/metadata.name: metallb-system
          pod-security.kubernetes.io/audit: privileged
          pod-security.kubernetes.io/enforce: privileged
          pod-security.kubernetes.io/enforce-version: latest
          pod-security.kubernetes.io/warn: privileged
  when: metallb_state is not defined or metallb_state == 'present'

- name: Apply MetalLB namespace
  kubernetes.core.k8s:
    state: present
    src: /tmp/metallb-namespace.yaml
  when: metallb_state is not defined or metallb_state == 'present'

- name: Uninstall MetalLB if requested
  ansible.builtin.command:
    cmd: helm uninstall metallb -n metallb-system
  when: metallb_state is defined and metallb_state == 'absent'
  ignore_errors: true

- name: Delete MetalLB namespace if requested
  ansible.builtin.command:
    cmd: kubectl delete namespace metallb-system
  when: metallb_state is defined and metallb_state == 'absent'
  ignore_errors: true
  
- name: Install or upgrade MetalLB via Helm
  ansible.builtin.command:
    cmd: >
      helm upgrade --install metallb metallb/metallb
      --version {{ metallb.version }}
      --namespace metallb-system
      --create-namespace
  register: metallb_install
  ignore_errors: true
  when: metallb_state is not defined or metallb_state == 'present'

- name: Wait for MetalLB controller pod to exist
  ansible.builtin.command:
    cmd: kubectl get pod -n metallb-system -l app.kubernetes.io/component=controller
  register: controller_pods
  retries: 10
  delay: 15
  until: controller_pods.stdout != ""
  when: metallb_state is not defined or metallb_state == 'present'

- name: Wait for MetalLB speaker pod to exist
  ansible.builtin.command:
    cmd: kubectl get pod -n metallb-system -l app.kubernetes.io/component=speaker
  register: speaker_pods
  retries: 10
  delay: 15
  until: speaker_pods.stdout != ""
  when: metallb_state is not defined or metallb_state == 'present'

- name: Wait for MetalLB controller pod to be ready
  ansible.builtin.command: >
    kubectl wait --for=condition=ready pod
    -l app.kubernetes.io/component=controller
    -n metallb-system
    --timeout=600s
  register: metallb_controller_ready
  failed_when: metallb_controller_ready.rc != 0
  when: metallb_state is not defined or metallb_state == 'present'

- name: Wait for MetalLB speaker pods to be ready
  ansible.builtin.command: >
    kubectl wait --for=condition=ready pod
    -l app.kubernetes.io/component=speaker
    -n metallb-system
    --timeout=600s
  register: metallb_speaker_ready
  failed_when: metallb_speaker_ready.rc != 0
  when: metallb_state is not defined or metallb_state == 'present'

- name: Create MetalLB IPAddressPool and L2Advertisement
  ansible.builtin.copy:
    dest: /tmp/metallb-ipaddresspool.yaml
    content: |
      apiVersion: metallb.io/v1beta1
      kind: IPAddressPool
      metadata:
        name: default-address-pool
        namespace: metallb-system
      spec:
        addresses:
          - {{ metallb_addresses }}
      ---
      apiVersion: metallb.io/v1beta1
      kind: L2Advertisement
      metadata:
        name: default-l2-advertisement
        namespace: metallb-system
  when: metallb_state is not defined or metallb_state == 'present'

- name: Apply MetalLB IPAddressPool and L2Advertisement
  kubernetes.core.k8s:
    state: present
    src: /tmp/metallb-ipaddresspool.yaml
  when: metallb_state is not defined or metallb_state == 'present'
  
- name: Verify MetalLB IPAddressPool exists
  ansible.builtin.command:
    cmd: kubectl get ipaddresspools.metallb.io -n metallb-system
  register: metallb_ip_pool
  when: metallb_state is not defined or metallb_state == 'present'

- name: Show MetalLB IPAddressPool status
  ansible.builtin.debug:
    var: metallb_ip_pool.stdout_lines
  when: metallb_state is not defined or metallb_state == 'present'