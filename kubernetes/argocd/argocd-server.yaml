apiVersion: v1
kind: Namespace
metadata:
  name: argocd
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: argocd-server
  namespace: argocd
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: argocd-server
  template:
    metadata:
      labels:
        app.kubernetes.io/name: argocd-server
    spec:
      containers:
        - name: argocd-server
          image: argoproj/argocd:latest
          ports:
            - containerPort: 8080
          env:
            - name: ARGOCD_SERVER
              value: "argocd-server"
---
apiVersion: v1
kind: Service
metadata:
  name: argocd-server
  namespace: argocd
spec:
  ports:
    - port: 80
      targetPort: 8080
    - port: 443
      targetPort: 8080
  selector:
    app.kubernetes.io/name: argocd-server
  type: LoadBalancer

---
apiVersion: traefik.io/v1alpha1
kind: IngressRoute
metadata:
  name: argocd-server
  namespace: argocd
spec:
  entryPoints:
    - websecure
  routes:
    - match: Host(`argocd.rubberduckops.com`)
      kind: Rule
      priority: 10
      services:
        - name: argocd-server
          port: 80
    - kind: Rule
      match: Host(`argocd.rubberduckops.com`) && Header(`Content-Type`, `application/grpc`)
      priority: 11
      services:
        - name: argocd-server
          port: 80
          scheme: h2c
  tls:
    certResolver: default

---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: argocd-rubberduckops-tls
  namespace: dev
spec:
  secretName: argocd-rubberduckops-tls  
  issuerRef:
    name: letsencrypt-prod  
    kind: ClusterIssuer
  dnsNames:
    - argocd.rubberduckops.com